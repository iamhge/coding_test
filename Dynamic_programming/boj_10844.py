# 쉬운 계단 수
'''
dp[n]일 때,
n = i자리 계단 수의 1의 자리
dp[n] = 1의 자리가 n인 계단 수의 개수
ex)
3자리 계단 수의 dp
dp[0] = 1 (210)
dp[1] = 3 (101, 121, 321)
dp[2] = 3 (212, 232, 432)
dp[3] = 4 (123, 323, 343, 543)
dp[4] = 4 (234, 434, 454, 654)
dp[5] = 4 (345, 545, 565, 765)
dp[6] = 4 (456, 656, 676, 876)
dp[7] = 4 (567, 767, 787, 987)
dp[8] = 3 (678, 878, 898)
dp[9] = 2 (789, 989)

[i-1의 1의 자리가 1 ~ 8인 경우 (0, 9가 아닌 경우)]
(i자리 계단 수)의 (1의 자리가 n)인 개수 =
(i-1자리 계단 수)의 (1의 자리가 n-1)인 개수
+ (i-1개의 자리수를 갖는 계단 수)의 (1의 자리가 n+1)인 개수
ex)
3자리 계단 수의 1의 자리가 2인 경우(212, 232, 432)
: 2자리 계단 수의 1의 자리가 1인 경우(21)의 뒤에 2를 붙인 것
    + 2자리 계단 수의 1의 자리가 3인 경우(23, 43)의 뒤에 2를 붙인 것
ex2)
i-1의 1의 자리가 2인 경우
i자리 계단 수의 1의 자리는 1, 3으로 확장 가능

[i-1의 1의 자리가 0, 9인 경우]
i자리 계단 수의 1의 자리는 1과 8으로만 확장 가능
'''
import sys

N = int(sys.stdin.readline().rstrip())
# dp[n] = 1의 자리가 n인 개수
dp = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1]
if N >= 2:
    dp = [1, 1, 2, 2, 2, 2, 2, 2, 2, 1]

for i in range(3, N+1):
    tmp = dp
    dp = [0 for _ in range(10)]
    for j in range(1, 9):
        dp[j+1] += tmp[j]
        dp[j-1] += tmp[j]
    dp[1] += tmp[0]
    dp[8] += tmp[9]

print(sum(dp)%1000000000)